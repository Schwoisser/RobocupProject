import time


def set_times(names, keys, timestep, time_start):
    new_times = list()
    for i, name in enumerate(names):
        i_times = [(time_start + k * timestep) for k in range(len(keys[i]))]
        new_times.append(i_times)
    return new_times


# KEYFRAMES ###############################################################################

def nod(motionProxy, timestep=0.5):
    names = ["HeadYaw", "HeadPitch"]
    keys = [[0.0, 0.0, 0.0, 0.0], [0.5, -0.5, 0.5, -0.5]]
    times = [[timestep * (i + 1) for i in range(4)],  # for "HeadPitch" in seconds
             [timestep * (i + 1) for i in range(4)]]  # for "HeadYaw" in seconds
    # times = [[0.5, 1.5, 2.5, 3.5], [0.5, 1.5, 2.5, 3.5]]
    motionProxy.angleInterpolation(names, keys, times, True)


def up_and_down(motionProxy):
    names = ["LAnklePitch", "LAnkleRoll", "LHipPitch", "LHipRoll", "LHipYawPitch", "LKneePitch",
             "RAnklePitch", "RAnkleRoll", "RHipPitch", "RHipRoll", "RHipYawPitch", "RKneePitch"]
    times = [[0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96]] * 12
    keys = [[0.0828387, -0.498408, 0.0836714, -0.5079, 0.0836714, -0.498408, 0.0836714, -0.5079, 0.0836714],
            [-0.103341, -0.106182, -0.103341, -0.103341, -0.103341, -0.106182, -0.103341, -0.103341, -0.103341],
            [0.122436, -0.610599, 0.123575, -0.611738, 0.123575, -0.610598, 0.123575, -0.611738, 0.123575],
            [0.121781, 0.119108, 0.121781, 0.121781, 0.121781, 0.119108, 0.121781, 0.121781, 0.121781],
            [-0.174015, 0.0872665, -0.174015, 0.0785398, -0.174015, 0.0802851, -0.174015, 0.0872665, -0.1740151],
            [-0.0829613, 1.03453, -0.0851616, 1.03673, -0.0851616, 1.03452, -0.0851616, 1.03673, -0.0851616],
            [0.0828387, -0.498408, 0.0836714, -0.5079, 0.0836714, -0.498408, 0.0836714, -0.5079, 0.0836714],
            [0.103341, 0.103341, 0.103341, 0.103341, 0.103341, 0.103341, 0.103341, 0.103341, 0.103341],
            [0.122436, -0.610599, 0.123575, -0.611738, 0.123575, -0.610598, 0.123575, -0.611738, 0.123575],
            [-0.121781, -0.121781, -0.121781, -0.121781, -0.121781, -0.121781, -0.121781, -0.121781, -0.121781],
            [0 - 0.174015, 0.0872665, -0.174015, 0.0785398, -0.174015, 0.0802851, -0.174015, 0.0872665, -0.1740151],
            [-0.0829613, 1.03453, -0.0851616, 1.03673, -0.0851616, 1.03452, -0.0851616, 1.03673, -0.0851616]]

    motionProxy.post.angleInterpolation(names, keys, times, True)


def macarena(motionProxy, timestep=0.538, time_start=1):
    # timestep = 0.538
    isAbsolute = True

    angleList1_right = [-1.257460117340087891e-01, -7.213997840881347656e-02, -2.454819679260253906e-01,
                        2.765393257141113281e-02, 8.893013000488281250e-02, 3.539999723434448242e-01]
    angleList2_right = [2.918791770935058594e-02, -1.565098762512207031e-01, 1.667416095733642578e+00,
                        1.231384277343750000e-02, 1.435782074928283691e+00, 3.539999723434448242e-01]
    angleList1_left = [-1.257460117340087891e-01, 7.213997840881347656e-02, 2.454819679260253906e-01,
                       2.765393257141113281e-02, 8.893013000488281250e-02, 3.539999723434448242e-01]
    angleList2_left = [2.918791770935058594e-02, 1.565098762512207031e-01, -1.667416095733642578e+00,
                       1.231384277343750000e-02, -1.435782074928283691e+00, 3.539999723434448242e-01]
    angleList3_right = [1.060036182403564453e+00, -7.946538925170898438e-01, -2.102000713348388672e-01,
                        1.285533905029296875e+00, -1.538205146789550781e-02, 3.371999859809875488e-01]
    angleList3_left = [1.060036182403564453e+00, 7.946538925170898438e-01, 2.102000713348388672e-01,
                       -1.285533905029296875e+00, -1.538205146789550781e-02, 3.371999859809875488e-01]
    angleList4_right = [-7.991721630096435547e-01, -5.875639915466308594e-01, 7.040641307830810547e-01,
                        1.560120105743408203e+00, 1.306926012039184570e+00, 3.651999831199645996e-01]
    angleList4_left = [-9.679961204528808594e-01, 6.902580261230468750e-01, -5.798940658569335938e-01,
                       -1.561570048332214355e+00, -1.380641937255859375e+00, 3.072000145912170410e-01]

    motionProxy.angleInterpolation("RArm", angleList1_right, timestep, isAbsolute)
    motionProxy.angleInterpolation("LArm", angleList1_left, timestep, isAbsolute)
    motionProxy.angleInterpolation("RArm", angleList2_right, timestep, isAbsolute)
    motionProxy.angleInterpolation("LArm", angleList2_left, timestep, isAbsolute)
    motionProxy.angleInterpolation("RArm", angleList4_right, timestep, isAbsolute)
    motionProxy.angleInterpolation("LArm", angleList4_left, timestep, isAbsolute)
    motionProxy.angleInterpolation("RArm", angleList3_right, timestep, isAbsolute)
    motionProxy.angleInterpolation("LArm", angleList3_left, timestep, isAbsolute)


def up_and_down_1(motionProxy):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.76, 1.96, 3.16, 4.36])
    keys.append([-0.0106666, -0.0141376, -0.0141376, -0.0141376])

    names.append("HeadYaw")
    times.append([0.76, 1.96, 3.16, 4.36])
    keys.append([-0.674338, 0.638078, -0.683508, 0.638078])

    names.append("LAnklePitch")
    times.append([0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96])
    keys.append([0.0828387, -0.498408, 0.0836714, -0.5079, 0.0836714, -0.498408, 0.0836714, -0.5079, 0.0836714])

    names.append("LAnkleRoll")
    times.append([0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96])
    keys.append([-0.103341, -0.102974, -0.103341, -0.101229, -0.103341, -0.102378, -0.103341, -0.102378, -0.103341])

    names.append("LElbowRoll")
    times.append([0.16, 0.76, 1.36, 2.56, 3.16, 3.76, 4.96])
    keys.append([-0.41295, -0.420158, -0.41295, -0.41295, -0.417546, -0.41295, -0.41295])

    names.append("LElbowYaw")
    times.append([0.16, 0.76, 1.36, 2.56, 3.16, 3.76, 4.96])
    keys.append([-1.21064, -1.22097, -1.20062, -1.20062, -1.21724, -1.20062, -1.20062])

    names.append("LHand")
    times.append([0.16, 0.76, 1.36, 2.56, 3.16, 3.76, 4.96])
    keys.append([0.292284, 0.3, 0.292284, 0.292284, 0.3, 0.292284, 0.292284])

    names.append("LHipPitch")
    times.append([0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96])
    keys.append([0.122436, -0.596903, 0.123575, -0.612611, 0.123575, -0.610563, 0.123575, -0.606502, 0.123575])

    names.append("LHipRoll")
    times.append([0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96])
    keys.append([0.121781, 0.122173, 0.121781, 0.122173, 0.121781, 0.114832, 0.121781, 0.114832, 0.121781])

    names.append("LHipYawPitch")
    times.append([0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96])
    keys.append([-0.174015, 0.0872665, -0.174015, 0.0785398, -0.174015, 0.0802851, -0.174015, 0.0872665, -0.174015])

    names.append("LKneePitch")
    times.append([0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96])
    keys.append([-0.0829613, 1.02451, -0.0851616, 1.02974, -0.0851616, 1.03448, -0.0851616, 1.03673, -0.0851616])

    names.append("LShoulderPitch")
    times.append([0.16, 0.76, 1.36, 2.56, 3.16, 3.76, 4.96])
    keys.append([1.42708, 1.38749, 1.44722, 1.44722, 1.40547, 1.44722, 1.44722])

    names.append("LShoulderRoll")
    times.append([0.16, 0.76, 1.36, 2.56, 3.16, 3.76, 4.96])
    keys.append([0.257591, 0.338173, 0.227903, 0.227903, 0.320011, 0.227903, 0.227903])

    names.append("LWristYaw")
    times.append([0.16, 0.76, 1.36, 2.56, 3.16, 3.76, 4.96])
    keys.append([-0.109248, -0.0966509, -0.109248, -0.109248, -0.106531, -0.109248, -0.109248])

    names.append("RAnklePitch")
    times.append([0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96])
    keys.append([0.0828387, -0.488692, 0.0836714, -0.502655, 0.0836714, -0.488692, 0.0836714, -0.504072, 0.0836714])

    names.append("RAnkleRoll")
    times.append([0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96])
    keys.append([0.103341, 0.102974, 0.103341, 0.10472, 0.103341, 0.102974, 0.103341, 0.0996395, 0.103341])

    names.append("RElbowRoll")
    times.append([0.16, 0.76, 1.36, 2.56, 3.16, 3.76, 4.96])
    keys.append([0.41295, 0.415691, 0.41295, 0.41295, 0.41295, 0.41295, 0.41295])

    names.append("RElbowYaw")
    times.append([0.16, 0.76, 1.36, 2.56, 3.16, 3.76, 4.96])
    keys.append([1.21064, 1.21447, 1.20062, 1.20062, 1.21064, 1.20062, 1.20062])

    names.append("RHand")
    times.append([0.16, 0.76, 1.36, 2.56, 3.16, 3.76, 4.96])
    keys.append([0.292284, 0.292284, 0.292284, 0.292284, 0.292284, 0.292284, 0.292284])

    names.append("RHipPitch")
    times.append([0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96])
    keys.append([0.122436, -0.596903, 0.123575, -0.610865, 0.123575, -0.607375, 0.123575, -0.606502, 0.123575])

    names.append("RHipRoll")
    times.append([0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96])
    keys.append([-0.121781, -0.122173, -0.121781, -0.120428, -0.121781, -0.122173, -0.121781, -0.117404, -0.121781])

    names.append("RHipYawPitch")
    times.append([0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96])
    keys.append([-0.174015, 0.0872665, -0.174015, 0.0785398, -0.174015, 0.0802851, -0.174015, 0.0872665, -0.174015])

    names.append("RKneePitch")
    times.append([0.16, 0.76, 1.36, 1.96, 2.56, 3.16, 3.76, 4.36, 4.96])
    keys.append([-0.0829613, 1.02451, -0.0851616, 1.03498, -0.0851616, 1.02451, -0.0851616, 1.03673, -0.0851616])

    names.append("RShoulderPitch")
    times.append([0.16, 0.76, 1.36, 2.56, 3.16, 3.76, 4.96])
    keys.append([1.42708, 1.3873, 1.44722, 1.44722, 1.40547, 1.44722, 1.44722])

    names.append("RShoulderRoll")
    times.append([0.16, 0.76, 1.36, 2.56, 3.16, 3.76, 4.96])
    keys.append([-0.257591, -0.338594, -0.227903, -0.227903, -0.320011, -0.227903, -0.227903])

    names.append("RWristYaw")
    times.append([0.16, 0.76, 1.36, 2.56, 3.16, 3.76, 4.96])
    keys.append([0.109248, 0.109171, 0.109248, 0.109248, 0.109248, 0.109248, 0.109248])

    motionProxy.angleInterpolation(names, keys, times, True)
    # return names, times, keys


def dance1(motionProxy):  # choreo 1
    effector_names = ["HeadYaw", "HeadPitch"]
    times = [[0.6], [0.6]]

    for i in range(4):
        motionProxy.post.angleInterpolation(effector_names, [0.0, 0.5], times, True)
        motionProxy.post.angleInterpolation(effector_names, [0.0, -0.5], times, True)

    effector = ["RShoulderPitch", "RShoulderRoll", "RElbowYaw", "RElbowRoll", "RHand"]
    angleList1 = [1.385, -0.274, -1.222, 0, 0.292284]
    times = 0.8
    motionProxy.angleInterpolation(effector, angleList1, times, True)

    effector = ["LShoulderPitch", "LShoulderRoll", "LElbowYaw", "LElbowRoll", "LHand"]
    angleList1 = [1.385, 0.274, 1.222, 0, 0.292284]
    motionProxy.angleInterpolation(effector, angleList1, times, True)

    effector = ["RShoulderPitch", "RShoulderRoll", "RElbowYaw", "RElbowRoll", "RHand"]
    angleList2 = [1.489, -1.222, 0, 1.342, 0.292284]
    motionProxy.angleInterpolation(effector, angleList2, times, True)

    effector = ["LShoulderPitch", "LShoulderRoll", "LElbowYaw", "LElbowRoll", "LHand"]
    angleList2 = [1.489, 1.222, 0, -1.342, 0.292284]
    motionProxy.angleInterpolation(effector, angleList2, times, True)

    effector = ["RShoulderPitch", "RShoulderRoll", "RElbowYaw", "RElbowRoll", "RHand"]
    times = [[0.6, 1.2]] * 5
    angleList1 = [[1.489, 1.489], [-1.222, -1.222], [0, 0], [0, 1.342], [0.292284, 0.292284]]

    for i in range(3):
        motionProxy.post.angleInterpolation(effector, angleList1, times, True)

    effector = ["LShoulderPitch", "LShoulderRoll", "LElbowYaw", "LElbowRoll"]
    times = [[0.6, 1.2]] * 5
    angleList1 = [[1.489, 1.489], [1.222, 1.222], [0, 0], [0, -1.342]]

    for i in range(3):
        motionProxy.angleInterpolation(effector, angleList1, times, True)


def dance3(motionProxy, timestep=0, time_start=1):  # right leg to left leg
    names_rechte = ["RHipRoll", "LHipRoll", "LKneePitch", "LAnklePitch", "LHipPitch"]
    angleList1 = [[0.2], [0.2], [1], [-0.5], [-0.5]]
    angleList2 = [[0.0], [0.0], [0.0], [0.0], [0.0]]
    isAbsolute = True

    names_linke = ["LHipRoll", "RHipRoll", "RKneePitch", "RAnklePitch", "RHipPitch"]
    times = [[0.5]] * 5
    angleList_left1 = [[-0.2], [-0.2], [1], [-0.5], [-0.5]]
    angleList_left2 = [[0.0], [0.0], [0.0], [0.0], [0.0]]

    for i in range(3):
        motionProxy.angleInterpolation(names_rechte, angleList1, times, isAbsolute)
        motionProxy.angleInterpolation(names_rechte, angleList2, times, isAbsolute)
        motionProxy.angleInterpolation(names_linke, angleList_left1, times, isAbsolute)
        motionProxy.angleInterpolation(names_linke, angleList_left2, times, isAbsolute)


def dance4(motionProxy, timestep=0, time_start=1):
    names = list()
    keys = list()

    names.append("HeadPitch")
    keys.append([-0.161711, -0.161711, -0.161711, -0.160616, -0.161711, -0.160616, -0.160616])

    names.append("HeadYaw")
    keys.append([-0.0788623, -0.922569, -0.0848661, 0.758922, -0.0848661, -0.124136, -0.077879])

    names.append("LElbowRoll")
    keys.append([-1.29904, -1.31249, -1.3075, -1.38153, -1.3075, -1.38845, -1.31136])

    names.append("LElbowYaw")
    keys.append([-1.20239, -1.18508, -1.19552, -1.20218, -1.19552, -1.3705, -1.15993])

    names.append("LHand")
    keys.append([0.0198864, 0.02, 0.0106246, 0.992796, 0.0106246, 0.965946, 0.00719799])

    names.append("LShoulderPitch")
    keys.append([-0.0991988, -0.10472, -0.106185, -0.240072, -0.106185, -0.106534, -0.11276])

    names.append("LShoulderRoll")
    keys.append([-0.138368, -0.176278, -0.151091, 1.06044, -0.151091, 1.07142, -0.217529])

    names.append("LWristYaw")
    keys.append([-0.122806, -0.122173, -0.122806, -0.123708, -0.122806, -0.123708, -0.123708])

    names.append("RElbowRoll")
    keys.append([1.30214, 1.39012, 1.31074, 1.30332, 1.31074, 1.38746, 1.31542])

    names.append("RElbowYaw")
    keys.append([1.21074, 1.38484, 1.21126, 1.21659, 1.21126, 1.38824, 1.15929])

    names.append("RHand")
    keys.append([0.0199652, 0.981179, 0.01, 0.0167444, 0.01, 0.964357, 0.00719799])

    names.append("RShoulderPitch")
    keys.append([-0.0977814, -0.110644, -0.10821, -0.101841, -0.10821, -0.101647, -0.116931])

    names.append("RShoulderRoll")
    keys.append([0.129466, -1.2131, 0.137881, 0.119137, 0.137881, -1.19888, 0.220723])

    names.append("RWristYaw")
    keys.append([0.114776, 0.114776, 0.115192, 0.123077, 0.115192, 0.123077, 0.123077])

    if timestep == 0:
        times = list()
        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # HeadPitch
        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # HeadYaw

        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # LElbowRoll
        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # LElbowYaw
        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # LHand

        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # LShoulderPitch
        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # LShoulderRoll
        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # LWristYaw

        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # RElbowRoll
        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # RElbowYaw
        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # RHand

        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # RShoulderPitch
        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # RShoulderRoll
        times.append([0.96, 1.56, 2.36, 3.16, 3.96, 4.76, 5.56])  # RWristYaw
    else:
        times = set_times(names, keys, timestep, time_start)

    motionProxy.angleInterpolation(names, keys, times, True)
    # return names, times, keys


def dance5(motionProxy, timestep=0, time_start=1):
    names = list()
    keys = list()

    names.append("HeadPitch")
    keys.append(
        [-0.019984, -0.000672507, -0.000672507, -0.231865, -0.222498, -0.228495, -0.228495, -0.222816, -0.228495,
         -0.230342, -0.228495, -0.226552, -0.170989])

    names.append("HeadYaw")
    keys.append(
        [-0.00464392, 0, 0, 0.0181209, 0.0173867, 0.0171171, 0.0167786, 0.016399, 0.0167786, 0.0167786, 0.016399,
         0.016399, 0.00558785])

    names.append("LAnklePitch")
    keys.append(
        [-0.349794, -0.174185, -0.171502, -0.164061, -0.167552, -0.404916, -0.161303, -0.407489, -0.40182, -0.167108,
         -0.172115, -0.395586, 0.078972])

    names.append("LAnkleRoll")
    keys.append(
        [-0.00149202, -0.0485521, -0.0522367, -0.0628318, -0.0610865, -0.0616461, -0.061869, -0.061869, -0.0616281,
         -0.0611527, -0.0616281, -0.070956, -0.107509])

    names.append("LElbowRoll")
    keys.append(
        [-0.977116, -0.942478, -0.947551, -1.26422, -1.26141, -1.34842, -1.27056, -1.33812, -1.3374, -1.32876, -1.32994,
         -1.33012, -1.26388, -0.419876])

    names.append("LElbowYaw")
    keys.append(
        [-1.35456, -1.37183, -1.36987, 0.457252, 0.450838, -1.30851, 0.449817, -1.30209, -1.30316, -1.29725, -1.54985,
         -1.5493, 0.315294, -1.2006])

    names.append("LHand")
    keys.append(
        [0.2728, 0.26, 0.262901, 0.267093, 0.271569, 0.272798, 0.263606, 0.263606, 0.263606, 0.263606, 0.26, 0.263606,
         0.260375, 0.293589])

    names.append("LHipPitch")
    keys.append(
        [-0.361982, -0.21201, -0.208418, -0.197222, -0.204204, -1.11177, -0.203015, -1.10724, -1.10724, -0.176278,
         -0.179532, -1.10174, 0.12602])

    names.append("LHipRoll")
    keys.append(
        [0.00771189, 0.0546468, 0.0584526, 0.0680678, 0.0680678, 0.0687065, 0.0674716, 0.0677568, 0.0675128, 0.0671775,
         0.0669856, 0.0763273, 0.110183])

    names.append("LHipYawPitch")
    keys.append(
        [-0.00609398, -0.191061, -0.190223, -0.188496, -0.181514, -0.141372, -0.175975, -0.148155, -0.151908, -0.150098,
         -0.155616, -0.148661, -0.162735])

    names.append("LKneePitch")
    keys.append(
        [0.699462, 0.363943, 0.363941, 0.361283, 0.359538, 1.43117, 0.358737, 1.42615, 1.42615, 0.415388, 0.418919,
         1.43093, -0.0905938])

    names.append("LShoulderPitch")
    keys.append([0.317496, 0.911062, 0.914764, 0.675238, 0.677544, -0.303813, 0.666206, -0.301066, -0.301525, -0.300513,
                 -0.300197, -0.300736, -0.363447, 1.44072])

    names.append("LShoulderRoll")
    keys.append(
        [0.282214, 0.312414, 0.316482, 1.24704, 1.24337, 1.23506, 1.23648, 1.23952, 1.23648, 1.24319, -0.0750492,
         -0.0653032, 0.114485, 0.215601])

    names.append("LWristYaw")
    keys.append(
        [0.0152981, -0.015708, 0.009239, -1.59378, -1.59267, -1.24433, -1.57769, -1.25507, -1.2585, -1.26482, 0.197222,
         0.197679, -0.47319, 0.0984275])

    names.append("RAnklePitch")
    keys.append(
        [-0.346642, -0.174185, -0.171502, -0.164981, -0.167552, -0.404916, -0.161303, -0.407489, -0.40182, -0.167108,
         -0.172115, -0.395586, 0.0789718])

    names.append("RAnkleRoll")
    keys.append(
        [0.00310993, 0.0482817, 0.0519815, 0.0605263, 0.0610865, 0.0611668, 0.0608167, 0.0608167, 0.0605905, 0.0604224,
         0.0603441, 0.0609399, 0.110732])

    names.append("RElbowRoll")
    keys.append(
        [0.975666, 0.946649, 1.27002, 1.26547, 1.35748, 1.26463, 1.34772, 1.27133, 1.35423, 1.33495, 1.31867, 1.32496,
         1.31337, 0.42031])

    names.append("RElbowYaw")
    keys.append(
        [1.35601, 1.37368, -0.459238, -0.458732, 1.3189, -0.390214, 1.3137, -0.384081, 1.4671, 0.161477, 0.160371,
         1.54074, 1.52927, 1.20332])

    names.append("RHand")
    keys.append(
        [0.2736, 0.261572, 0.262901, 0.267093, 0.26883, 0.274328, 0.265166, 0.265166, 0.265166, 0.265166, 0.265166,
         0.265166, 0.270586, 0.291594])

    names.append("RHipPitch")
    keys.append(
        [-0.368202, -0.211993, -0.208401, -0.20735, -0.204204, -1.11177, -0.203015, -1.10729, -1.10729, -0.176278,
         -0.179532, -1.10174, 0.12602])

    names.append("RHipRoll")
    keys.append(
        [-0.0199001, -0.0546389, -0.0584451, -0.067236, -0.0680678, -0.0683314, -0.0675905, -0.0675905, -0.0675631,
         -0.067236, -0.0672847, -0.0762079, -0.110153])

    names.append("RHipYawPitch")
    keys.append(
        [-0.00609398, -0.191061, -0.190223, -0.188496, -0.181514, -0.141372, -0.175975, -0.148155, -0.151908, -0.150098,
         -0.155616, -0.148661, -0.162735])

    names.append("RKneePitch")
    keys.append(
        [0.699546, 0.363927, 0.363926, 0.362414, 0.359538, 1.43117, 0.358737, 1.42616, 1.42616, 0.415388, 0.418919,
         1.43093, -0.0905938])

    names.append("RShoulderPitch")
    keys.append([0.329852, 0.908001, 0.669714, 0.673362, -0.307077, 0.610288, -0.297753, 0.608492, 0.0943403, 0.0903883,
                 0.0956723, -0.298265, -0.293671, 1.4391])

    names.append("RShoulderRoll")
    keys.append([-0.280764, -0.314782, -1.25623, -1.25512, -1.25141, -1.24295, -1.24338, -1.24876, 0.0713389, 0.0563975,
                 0.0313276, 0.0705488, 0.0609141, -0.223964])

    names.append("RWristYaw")
    keys.append([0.053648, 0.00836283, 1.6006, 1.5994, 1.2422, 1.5775, 1.25662, 1.56129, 0.149215, 0.154147, 0.156871,
                 -0.192939, -0.187583, 0.0939441])
    if timestep == 0:
        times = list()
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # HeadPitch
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # HeadYaw
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # LAnklePitch
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # LAnkleRoll
        times.append(
            [0.96, 1.72, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # LElbowRoll
        times.append(
            [0.96, 1.72, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # LElbowYaw
        times.append([0.96, 1.72, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # LHand
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # LHipPitch
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # LHipRoll
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # LHipYawPitch
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # LKneePitch
        times.append(
            [0.96, 1.72, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # LShoulderPitch
        times.append(
            [0.96, 1.72, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # LShoulderRoll
        times.append(
            [0.96, 1.72, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # LWristYaw
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # RAnklePitch
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # RAnkleRoll
        times.append(
            [0.96, 1.72, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # RElbowRoll
        times.append(
            [0.96, 1.72, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # RElbowYaw
        times.append([0.96, 1.72, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # RHand
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # RHipPitch
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # RHipRoll
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # RHipYawPitch
        times.append([0.96, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # RKneePitch
        times.append(
            [0.96, 1.72, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # RShoulderPitch
        times.append(
            [0.96, 1.72, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # RShoulderRoll
        times.append(
            [0.96, 1.72, 2.52, 3.32, 4.12, 4.92, 6.12, 7.32, 8.52, 9.32, 10.52, 11.72, 12.52, 13.72])  # RWristYaw
    else:
        times = set_times(names, keys, timestep, time_start)

    motionProxy.angleInterpolation(names, keys, times, True)

    dance_test(motionProxy, timestep)

def dance6(motionProxy, timestep=0, time_start=1):
    # Arms left to right
    nod(motionProxy)
    time.sleep(0.5)
    names_rechte = ["RHipRoll", "LHipRoll", "LKneePitch", "LAnklePitch", "LHipPitch"]
    angleList1 = [[0.2], [0.2], [1], [-0.5], [-0.5]]
    angleList2 = [[0.0], [0.0], [0.0], [0.0], [0.0]]
    isAbsolute = True

    names_linke = ["LHipRoll", "RHipRoll", "RKneePitch", "RAnklePitch", "RHipPitch"]
    times = [[0.6]] * 5
    angleList_left1 = [[-0.2], [-0.2], [1], [-0.5], [-0.5]]
    angleList_left2 = [[0.0], [0.0], [0.0], [0.0], [0.0]]

    for i in range(3):
        motionProxy.post.angleInterpolation(names_linke, angleList_left1, times, isAbsolute)
        motionProxy.post.angleInterpolation(names_linke, angleList_left2, times, isAbsolute)
        motionProxy.post.angleInterpolation(names_rechte, angleList1, times, isAbsolute)
        motionProxy.post.angleInterpolation(names_rechte, angleList2, times, isAbsolute)

    names = list()
    keys = list()

    names.append("HeadPitch")
    keys.append([-0.168952, -0.160616, -0.168952, -0.160616, -0.168952, -0.160616, -0.168952, -0.160616, -0.168952,
                 -0.160616, -0.168952, -0.160616])
    names.append("HeadYaw")
    keys.append(
        [-0.633889, -0.634909, 0.0805741, 0.806347, 0.0932572, -0.621554, 0.0853678, 0.802415, 0.0958251, -0.622761,
         0.0895247, 0.802851])

    names.append("LElbowRoll")
    keys.append([-0.420624, -1.0472, -0.420624, -1.20253, -0.420624, -1.0472, -0.420624, -1.20253, -0.420624, -1.0472,
                 -0.420624, -1.20253])

    names.append("LElbowYaw")
    keys.append([-1.19381, -0.940732, -1.19381, -1.68424, -1.19381, -0.940732, -1.19381, -1.68424, -1.19381, -0.940732,
                 -1.19381, -1.68424])

    names.append("LHand")
    keys.append([0.3, 0.38, 0.3, 0.37, 0.3, 0.38, 0.3, 0.37, 0.3, 0.38, 0.3, 0.37])

    names.append("LShoulderPitch")
    keys.append(
        [0.237365, 0.0453786, 0.237365, -0.0471239, 0.237365, 0.0453786, 0.237365, -0.0471239, 0.237365, 0.0453786,
         0.237365, -0.0471239])

    names.append("LShoulderRoll")
    keys.append(
        [0.0471239, 0.0820305, 0.0471239, 0.0872665, 0.0471239, 0.0820305, 0.0471239, 0.0872665, 0.0471239, 0.0820305,
         0.0471239, 0.0872665])

    names.append("LWristYaw")
    keys.append(
        [-0.0959931, -0.0680678, -0.0959931, -0.0698132, -0.0959931, -0.0680678, -0.0959931, -0.0698132, -0.0959931,
         -0.0680678, -0.0959931, -0.0698132])

    names.append("RElbowRoll")
    keys.append(
        [0.420624, 1.1973, 0.420624, 1.06989, 0.420624, 1.1973, 0.420624, 1.06989, 0.420624, 1.1973, 0.420624, 1.06989])

    names.append("RElbowYaw")
    keys.append(
        [1.19381, 1.70519, 1.19381, 1.11352, 1.19381, 1.70519, 1.19381, 1.11352, 1.19381, 1.70519, 1.19381, 1.11352])

    names.append("RHand")
    keys.append([0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3])

    names.append("RShoulderPitch")
    keys.append(
        [0.237365, 0.0523599, 0.237365, 0.0558505, 0.237365, 0.0523599, 0.237365, 0.0558505, 0.237365, 0.0523599,
         0.237365, 0.0558505])

    names.append("RShoulderRoll")
    keys.append(
        [-0.0471239, -0.16057, -0.0471239, -0.00523599, -0.0471239, -0.16057, -0.0471239, -0.00523599, -0.0471239,
         -0.16057, -0.0471239, -0.00523599])

    names.append("RWristYaw")
    keys.append(
        [0.0959931, 0.0959931, 0.0959931, 0.0959931, 0.0959931, 0.0959931, 0.0959931, 0.0959931, 0.0959931, 0.0959931,
         0.0959931, 0.0959931])

    if timestep == 0:
        times = list()
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # HeadPitch
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # HeadYaw
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # LElbowRoll
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # LElbowYaw
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # LHand
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # LShoulderPitch
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # LShoulderRoll
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # LWristYaw
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # RElbowRoll
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # RElbowYaw
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # RHand
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # RShoulderPitch
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # RShoulderRoll
        times.append([0.56, 1.16, 1.76, 2.36, 2.96, 3.56, 4.16, 4.76, 5.36, 5.96, 6.56, 7.16])  # RWristYaw
    else:
        times = set_times(names, keys, timestep, time_start)

    motionProxy.angleInterpolation(names, keys, times, True)
    # return names, times, keys
    dance4(motionProxy, 0.6)
    time.sleep(0.3)
    dance1(motionProxy)

def dance7(motionProxy, timestep=0, time_start=1):

    names = ["LAnklePitch", "LAnkleRoll", "LHipPitch", "LHipRoll", "LHipYawPitch", "LKneePitch",
             "RAnklePitch", "RAnkleRoll", "RHipPitch", "RHipRoll", "RHipYawPitch", "RKneePitch"]
    times = [[0.16, 0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12]] * 12

    keys = [[0.0828387, -0.498408, 0.0836714, -0.5079, 0.0836714, -0.498408, 0.0836714, -0.5079, 0.0836714],
            [-0.103341, -0.106182, -0.103341, -0.103341, -0.103341, -0.106182, -0.103341, -0.103341, -0.103341],
            [0.122436, -0.610599, 0.123575, -0.611738, 0.123575, -0.610598, 0.123575, -0.611738, 0.123575],
            [0.121781, 0.119108, 0.121781, 0.121781, 0.121781, 0.119108, 0.121781, 0.121781, 0.121781],
            [-0.174015, 0.0872665, -0.174015, 0.0785398, -0.174015, 0.0802851, -0.174015, 0.0872665, -0.1740151],
            [-0.0829613, 1.03453, -0.0851616, 1.03673, -0.0851616, 1.03452, -0.0851616, 1.03673, -0.0851616],
            [0.0828387, -0.498408, 0.0836714, -0.5079, 0.0836714, -0.498408, 0.0836714, -0.5079, 0.0836714],
            [0.103341, 0.103341, 0.103341, 0.103341, 0.103341, 0.103341, 0.103341, 0.103341, 0.103341],
            [0.122436, -0.610599, 0.123575, -0.611738, 0.123575, -0.610598, 0.123575, -0.611738, 0.123575],
            [-0.121781, -0.121781, -0.121781, -0.121781, -0.121781, -0.121781, -0.121781, -0.121781, -0.121781],
            [0 - 0.174015, 0.0872665, -0.174015, 0.0785398, -0.174015, 0.0802851, -0.174015, 0.0872665, -0.1740151],
            [-0.0829613, 1.03453, -0.0851616, 1.03673, -0.0851616, 1.03452, -0.0851616, 1.03673, -0.0851616]]
    motionProxy.post.angleInterpolation(names, keys, times, True)

    names = list()
    keys = list()

    names.append("HeadPitch")
    keys.append(
        [-0.17, -0.162743, -0.162743, -0.162743, -0.162743, -0.162743, -0.162743, -0.162743, -0.162743, -0.162743,
         -0.162743, -0.162743, -0.162743, -0.162743, -0.169877, -0.162743, -0.169877, -0.162743, -0.169877, -0.162743,
         -0.169877, -0.162743, -0.169877, -0.162743, -0.169877, -0.162743, -0.169877, -0.162743, -0.169877, -0.169653])
    names.append("HeadYaw")
    keys.append(
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.00356115, 0, -0.00356115, 0, -0.00356115, 0, -0.00356115, 0,
         -0.00356115, 0, -0.00356115, 0, -0.00356115, 0, -0.00356115, 0])

    names.append("LElbowRoll")
    keys.append([-0.502655, -1.18031, -1.33915, -1.18031, -1.33915, -1.18031, -1.33915, -1.53414, -0.452342, -1.53414,
                 -0.452342, -1.18031, -1.33915, -0.537561, -1.39913, -0.537561, -1.405, -0.45414, -0.439008, -0.45414,
                 -0.441691, -0.546288, -1.39458, -0.547234, -1.3993, -0.546288, -1.39509, -0.547234, -1.39509,
                 -0.421816])
    names.append("LElbowYaw")
    keys.append(
        [-1.21649, -1.20672, -1.61961, -1.20672, -1.61961, -1.20672, -1.61961, -0.644027, -1.23494, -0.644027, -1.23494,
         -1.20672, -1.61961, -0.532325, -0.367119, -0.532325, -0.360757, -1.24739, -1.22266, -1.24739, -1.21965,
         -0.535816, -0.375912, -0.541104, -0.371623, -0.535816, -0.369155, -0.541104, -0.369155, -1.19715])
    names.append("LHand")
    keys.append(
        [0.28, 0.293451, 0.293451, 0.293451, 0.293451, 0.293451, 0.293451, 1, 0.3, 1, 0.3, 0.293451, 0.293451, 0.99,
         0.307089, 0.99, 0.303553, 0.301404, 0.303553, 0.301404, 0.306361, 0.99, 0.314189, 0.992115, 0.312731, 0.99,
         0.30673, 0.992115, 0.30673, 0.290728])

    names.append("LShoulderPitch")
    keys.append(
        [1.45211, 0.75852, 1.99737, 0.75852, 1.99737, 0.75852, 1.99737, -0.164061, 1.36416, -0.164061, 1.36416, 0.75852,
         1.99737, -1.02276, -0.57995, -1.02276, -0.576368, 1.3325, 1.36054, 1.3325, 1.35184, -1.02625, -0.573242,
         -1.01489, -0.5753, -1.02625, -0.572362, -1.028, -0.572362, 1.44137])
    names.append("LShoulderRoll")
    keys.append(
        [0.225147, 0.168116, 0.287798, 0.168116, 0.287798, 0.168116, 0.287798, 0.246091, 0.330291, 0.246091, 0.330291,
         0.168116, 0.287798, 0.424115, 0.901974, 0.424115, 0.89923, 0.32298, 0.317427, 0.32298, 0.316802, 0.432842,
         0.908794, 0.433016, 0.906958, 0.432842, 0.905807, 0.485202, 0.905807, 0.218599])
    names.append("LWristYaw")
    keys.append(
        [0.0959931, -0.201538, -0.379407, -0.201538, -0.379407, -0.201538, -0.379407, -0.205949, -0.0919075, -0.205949,
         -0.0919075, -0.201538, -0.379407, -0.207694, -0.197928, -0.207694, -0.199814, -0.0959809, -0.098242,
         -0.0959809, -0.100977, -0.214676, -0.208769, -0.197583, -0.208569, -0.214676, -0.208662, -0.197583, -0.208662,
         0.0981629])

    names.append("RElbowRoll")
    keys.append(
        [0.427606, 1.30734, 1.16764, 1.30734, 1.16764, 1.30734, 1.16764, 0.42785, 1.49422, 0.42785, 1.49422, 1.30734,
         1.16764, 0.42785, 0.43638, 0.42785, 0.441469, 0.547246, 1.39646, 0.547246, 1.39726, 0.544543, 1.38953,
         0.555798, 1.39408, 0.544543, 1.39557, 0.563741, 1.39557, 0.421816])
    names.append("RElbowYaw")
    keys.append(
        [1.20951, 1.61927, 1.21214, 1.61927, 1.21214, 1.61927, 1.21214, 1.22339, 0.630008, 1.22339, 0.630008, 1.61927,
         1.21214, 1.22339, 1.21961, 1.22339, 1.21934, 0.537045, 0.366872, 0.537045, 0.363216, 0.537561, 0.379277,
         0.538904, 0.375031, 0.537561, 0.372587, 0.541052, 0.372587, 1.19715])
    names.append("RHand")
    keys.append(
        [0.29, 0.296573, 0.296573, 0.296573, 0.296573, 0.296573, 0.296573, 0.294948, 0.999456, 0.294948, 0.999456,
         0.296573, 0.296573, 0.294948, 0.293538, 0.294948, 0.301316, 0.999415, 0.310023, 0.999415, 0.310129, 0.98,
         0.314212, 0.99517, 0.312682, 0.98, 0.30673, 0.99, 0.30673, 0.290728])

    names.append("RShoulderPitch")
    keys.append(
        [1.42244, 2.00709, 0.761932, 2.00709, 0.761932, 2.00709, 0.761932, 1.38989, -0.147628, 1.38989, -0.147628,
         2.00709, 0.761932, 1.38989, 1.38074, 1.38989, 1.3915, -1.016, -0.575311, -1.016, -0.574901, -1.02102,
         -0.575682, -1.01788, -0.578165, -1.02102, -0.575264, -1.028, -0.575264, 1.44137])
    names.append("RShoulderRoll")
    keys.append(
        [-0.251327, -0.280059, -0.167937, -0.280059, -0.167937, -0.280059, -0.167937, -0.294315, -0.267035, -0.294315,
         -0.267035, -0.280059, -0.167937, -0.294315, -0.270774, -0.294315, -0.260617, -0.431206, -0.916936, -0.431206,
         -0.909259, -0.431096, -0.912105, -0.439914, -0.909644, -0.431096, -0.909159, -0.485202, -0.909159, -0.218599])
    names.append("RWristYaw")
    keys.append(
        [0.0994838, 0.379873, 0.19932, 0.379873, 0.19932, 0.379873, 0.19932, 0.0921009, 0.19437, 0.0921009, 0.19437,
         0.379873, 0.19932, 0.0921009, 0.101932, 0.0921009, 0.0995688, 0.20604, 0.203126, 0.20604, 0.203126, 0.211185,
         0.203126, 0.205202, 0.203126, 0.211185, 0.203126, 0.211185, 0.203126, 0.0981629])

    if timestep == 0:
        times = list()
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # HeadPitch
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # HeadYaw
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # LAnklePitch
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # LAnkleRoll
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # LElbowRoll
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # LElbowYaw
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # LHand
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # LHipPitch
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # LHipRoll
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # LHipYawPitch
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # LKneePitch
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56,
             19.16])  # LShoulderPitch
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56,
             19.16])  # LShoulderRoll
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # LWristYaw
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # RAnklePitch
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # RAnkleRoll
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # RElbowRoll
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # RElbowYaw
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # RHand
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # RHipPitch
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # RHipRoll
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # RHipYawPitch
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # RKneePitch
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56,
             19.16])  # RShoulderPitch
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56,
             19.16])  # RShoulderRoll
        times.append(
            [0.96, 1.52, 2.12, 2.72, 3.32, 3.92, 4.52, 5.12, 5.72, 6.32, 6.92, 7.52, 8.12, 9.12, 9.72, 10.32, 10.92,
             11.96, 12.56, 13.16, 13.72, 14.36, 14.96, 15.56, 16.16, 16.76, 17.36, 17.96, 18.56, 19.16])  # RWristYaw
    else:
        times = set_times(names, keys, timestep, time_start)

    motionProxy.angleInterpolation(names, keys, times, True)


def dab(motionProxy, timestep=0, time_start=1):
    names = list()
    keys = list()

    names.append("HeadPitch")
    # keys.append([-0.168314, 0, 0.296706, 0, -0.168314, 0.296706, -0.168314])
    keys.append([-0.164831, -0.0119224, 0.296621, 0.00652459, -0.161134, 0.0614308, 0.292858, 0.0662124, -0.16486])
    names.append("HeadYaw")
    # keys.append([-5.82076e-11, 0.79587, 0.801106, 0.79587, -5.82076e-11, -0.799361, -5.82076e-11])
    keys.append([0.00829263, 0.790634, 0.800656, 0.800656, 0.00126466, -0.531571, -0.794873, -0.404192, -0.00595358])
    names.append("LElbowRoll")
    keys.append([-0.420029, -0.837758, -1.11527, -0.836013, -0.420029, -0.219911, -0.20944, -0.219911, -0.420029])
    names.append("LElbowYaw")
    keys.append([-1.20295, -0.0471239, -0.312414, -0.0453786, -1.20295, 0.455531, 0.462512, 0.455531, -1.20295])
    names.append("LShoulderPitch")
    keys.append([1.43826, 0.493928, -0.219911, 0.499164, 1.43826, -0.181514, -0.689405, -0.181514, 1.43826])
    names.append("LShoulderRoll")
    keys.append([0.216204, 0.0994838, -0.0122173, 0.10472, 0.216204, 0.872665, 0.872665, 0.872665, 0.216204])
    names.append("RElbowRoll")
    keys.append([0.412962, 0.219911, 0.204204, 0.21293, 0.412962, 0.823795, 1.09956, 0.823795, 0.412962])
    names.append("RElbowYaw")
    keys.append([1.20143, -0.455531, -0.464258, -0.459022, 1.20143, 0.0471239, 0.310669, 0.0471239, 1.20143])
    names.append("RShoulderPitch")
    keys.append([1.43312, -0.181514, -0.69115, -0.185005, 1.43312, 0.493928, -0.204204, 0.493928, 1.43312])
    names.append("RShoulderRoll")
    keys.append([-0.220627, -0.872665, -0.876155, -0.87441, -0.220627, -0.0994838, 0, -0.0994838, -0.220627])

    if timestep == 0:
        times = list()
        # times.append([0.96, 1.56, 1.96, 2.36, 2.72, 3.56, 4.32]) # HeadPitch
        # times.append([0.96, 1.56, 1.96, 2.36, 2.72, 3.56, 4.32]) # HeadYaw
        times.append([0.96, 1.56, 1.96, 2.36, 2.72, 3.16, 3.56, 3.96, 4.32])  # HeadPitch
        times.append([0.96, 1.56, 1.96, 2.36, 2.72, 3.16, 3.56, 3.96, 4.32])  # HeadYaw
        times.append([0.96, 1.56, 1.96, 2.36, 2.72, 3.16, 3.56, 3.96, 4.32])  # LElbowRoll
        times.append([0.96, 1.56, 1.96, 2.36, 2.72, 3.16, 3.56, 3.96, 4.32])  # LElbowYaw
        times.append([0.96, 1.56, 1.96, 2.36, 2.72, 3.16, 3.56, 3.96, 4.32])  # LShoulderPitch
        times.append([0.96, 1.56, 1.96, 2.36, 2.72, 3.16, 3.56, 3.96, 4.32])  # LShoulderRoll
        times.append([0.96, 1.56, 1.96, 2.36, 2.72, 3.16, 3.56, 3.96, 4.32])  # RElbowRoll
        times.append([0.96, 1.56, 1.96, 2.36, 2.72, 3.16, 3.56, 3.96, 4.32])  # RElbowYaw
        times.append([0.96, 1.56, 1.96, 2.36, 2.72, 3.16, 3.56, 3.96, 4.32])  # RShoulderPitch
        times.append([0.96, 1.56, 1.96, 2.36, 2.72, 3.16, 3.56, 3.96, 4.32])  # RShoulderRoll
    else:
        times = set_times(names, keys, timestep, time_start)

    motionProxy.angleInterpolation(names, keys, times, True)
    # return names, keys, times


def dance8(motionProxy, timestep=0, time_start=1):
    names = ["LAnklePitch", "LAnkleRoll", "LElbowRoll", "LElbowYaw", "LHand", "LHipPitch", "LHipRoll", "LHipYawPitch",
             "LKneePitch", "LShoulderPitch", "LShoulderRoll", "LWristYaw",
             "RAnklePitch", "RAnkleRoll", "RElbowRoll", "RElbowYaw", "RHand", "RHipPitch", "RHipRoll", "RHipYawPitch",
             "RKneePitch", "RShoulderPitch", "RShoulderRoll", "RWristYaw"]
    keys = [
        [-0.338789, -0.345963, -0.343821, -0.335337, -0.335337, -0.335337, -0.325914, -0.325914, -0.325914, -0.325914],
        [-0.00832588, -0.0065871, -0.00450932, -0.00451108, -0.00451108, -0.00451108, -0.00832588, -0.00832588,
         -0.00832588, -0.00832588],
        [-0.502655, -1.17518, -1.34913, -1.18313, -1.34525, -1.18174, -1.34981, -1.51957, -0.459482, -1.51863,
         -0.462734, -0.545569, -1.40801, -0.545569, -0.463039, -0.440982, -0.451639, -0.545389, -1.39885,
         -0.546803, -1.39885, -0.552262, -1.00672],
        [-1.21649, -1.21223, -1.63349, -1.21306, -1.63311, -1.20993, -1.62605, -0.644494, -1.22978, -0.648383, -1.23643,
         -0.537282, -0.537282, -0.537282, -1.24362, -1.23283, -1.24309, -0.539438, -0.539438, -0.539438, -0.539438,
         -0.540155, -1.38391],
        [0.28, 0.292217, 0.292217, 0.292217, 0.292217, 0.292217, 0.292217, 0.990369, 0.3, 1, 0.300347, 0.987244,
         0.307534,
         0.987244, 0.307534, 0.307534, 0.307534, 0.98253, 0.314189, 0.982447, 0.314189, 0.982173, 0.25848],
        [-0.442996, -0.447216, -0.444169, -0.444085, -0.444085, -0.444085, -0.442996, -0.442996, -0.442996, -0.442996],
        [-0.00851005, -0.0139635, -0.01307, -0.0226896, -0.0226896, -0.0226896, -0.0314114, -0.0314114, -0.0314114,
         -0.0314114],
        [-0.0151067, -0.00646016, -0.0141672, -0.0217896, -0.0217896, -0.0217896, -0.0287527, -0.0287527, -0.0287527,
         -0.0287527],
        [0.68703, 0.692461, 0.688271, 0.688147, 0.688147, 0.688147, 0.686536, 0.686536, 0.686536, 0.686536],
        [1.45211, 0.762257, 1.97824, 0.762047, 1.98611, 0.762047, 1.98159, -0.156044, 1.3486, -0.150818, 1.34717,
         -1.02853, -1.09495, -1.02853, 1.31624, 1.35992, 1.3266, -1.01882, -1.09885, -1.03326, -1.09885, -1.02983,
         1.39681],
        [0.225147, 0.172085, 0.305619, 0.16926, 0.301335, 0.16926, 0.296921, 0.250514, 0.338163, 0.253996, 0.336627,
         0.432157, 1.29735, 0.432157, 0.343055, 0.321179, 0.332374, 0.43099, 1.28887, 0.433358, 1.28887, 0.429557,
         0.30093],
        [0.0959931, -0.2004, -0.378869, -0.209581, -0.371364, -0.205663, -0.371364, -0.20794, -0.0937725, -0.205607,
         -0.0925806, -0.210057, -0.210057, -0.210057, -0.104743, -0.104743, -0.104743, -0.20774, -0.208769, -0.208769,
         -0.208769, -0.202734, -0.00694184],
        [-0.36169, -0.355017, -0.361798, -0.368392, -0.368392, -0.368392, -0.374469, -0.374469, -0.374469, -0.374469],
        [-0.00778286, -0.00805185, -0.00861058, -0.013757, -0.013757, -0.013757, -0.0185005, -0.0185005, -0.0185005,
         -0.0185005],
        [0.427606, 1.31343, 1.17115, 1.32003, 1.17115, 1.31961, 1.16891, 0.433524, 1.48392, 0.436842, 1.4877, 0.436903,
         0.436903, 0.436903, 0.544134, 1.39202, 0.551582, 0.551582, 1.39371, 0.545054, 1.39371, 0.550538, 1.00671],
        [1.20951, 1.63269, 1.2209, 1.62785, 1.21659, 1.63527, 1.21839, 1.22942, 0.634755, 1.22063, 0.633239, 1.22571,
         1.22571, 1.22571, 0.542696, 0.542696, 0.542696, 0.542696, 0.542696, 0.542696, 0.542696, 0.54341, 1.38393],
        [0.29, 0.288039, 0.288039, 0.288039, 0.288039, 0.288039, 0.288039, 0.288039, 0.999456, 0.294948, 0.999106,
         0.297176, 0.297176, 0.297176, 0.998175, 0.319835, 0.99517, 0.984693, 0.314212, 0.972582, 0.314212, 0.994792,
         0.258626],
        [-0.461552, -0.466003, -0.460132, -0.461748, -0.461748, -0.461748, -0.461797, -0.461797, -0.461797, -0.461797],
        [-0.00729717, -0.0134847, -0.0120429, -0.0212925, -0.0212925, -0.0212925, -0.0296896, -0.0296896, -0.0296896,
         -0.0296896],
        [-0.0151067, -0.00646016, -0.0141672, -0.0217896, -0.0217896, -0.0217896, -0.0287527, -0.0287527, -0.0287527,
         -0.0287527],
        [0.711593, 0.709981, 0.711381, 0.711414, 0.711414, 0.711414, 0.711838, 0.711838, 0.711838, 0.711838],
        [1.42244, 1.99577, 0.766917, 1.98966, 0.765486, 1.98966, 0.764463, 1.37289, -0.141201, 1.37047, -0.143125,
         1.38221, 1.39447, 1.38221, -1.01137, -1.09713, -1.01967, -1.01967, -1.09607, -1.02819, -1.09607, -1.02477,
         1.39682],
        [-0.251327, -0.301237, -0.170942, -0.302123, -0.170945, -0.300738, -0.168488, -0.315364, -0.270196, -0.316425,
         -0.269601, -0.316882, -0.264505, -0.316882, -0.426075, -1.28717, -0.43562, -0.43562, -1.28718, -0.431613,
         -1.28718, -0.42786, -0.304378],
        [0.0994838, 0.378756, 0.199865, 0.37171, 0.207483, 0.375686, 0.207483, 0.0973897, 0.192698, 0.101698, 0.184773,
         0.0935765, 0.0935765, 0.0935765, 0.202907, 0.202907, 0.202907, 0.202907, 0.202907, 0.202907, 0.202907,
         0.197226, 0.00675324]]
    if timestep == 0:
        times = [
            [0.96, 1.56, 2.16, 2.76, 4.56, 5.76, 6.36, 6.96, 7.56, 8.16],
            [0.96, 1.56, 2.16, 2.76, 4.56, 5.76, 6.36, 6.96, 7.56, 8.16],
            [0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16, 5.76, 6.36, 6.96, 7.56, 8.16, 8.76, 9.36, 9.96, 10.56,
             11.16,
             11.76, 12.36, 12.96, 13.56, 14.16],
            [0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16, 5.76, 6.36, 6.96, 7.56, 8.16, 8.76, 9.36, 9.96, 10.56,
             11.16,
             11.76, 12.36, 12.96, 13.56, 14.16],
            [0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16, 5.76, 6.36, 6.96, 7.56, 8.16, 8.76, 9.36, 9.96, 10.56,
             11.16,
             11.76, 12.36, 12.96, 13.56, 14.16],
            [0.96, 1.56, 2.16, 2.76, 4.56, 5.76, 6.36, 6.96, 7.56, 8.16],
            [0.96, 1.56, 2.16, 2.76, 4.56, 5.76, 6.36, 6.96, 7.56, 8.16],
            [0.96, 1.56, 2.16, 2.76, 4.56, 5.76, 6.36, 6.96, 7.56, 8.16],
            [0.96, 1.56, 2.16, 2.76, 4.56, 5.76, 6.36, 6.96, 7.56, 8.16],
            [0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16, 5.76, 6.36, 6.96, 7.56, 8.16, 8.76, 9.36, 9.96, 10.56,
             11.16,
             11.76, 12.36, 12.96, 13.56, 14.16],
            [0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16, 5.76, 6.36, 6.96, 7.56, 8.16, 8.76, 9.36, 9.96, 10.56,
             11.16,
             11.76, 12.36, 12.96, 13.56, 14.16],
            [0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16, 5.76, 6.36, 6.96, 7.56, 8.16, 8.76, 9.36, 9.96, 10.56,
             11.16,
             11.76, 12.36, 12.96, 13.56, 14.16],
            [0.96, 1.56, 2.16, 2.76, 4.56, 5.76, 6.36, 6.96, 7.56, 8.16],
            [0.96, 1.56, 2.16, 2.76, 4.56, 5.76, 6.36, 6.96, 7.56, 8.16],
            [0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16, 5.76, 6.36, 6.96, 7.56, 8.16, 8.76, 9.36, 9.96, 10.56,
             11.16,
             11.76, 12.36, 12.96, 13.56, 14.16],
            [0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16, 5.76, 6.36, 6.96, 7.56, 8.16, 8.76, 9.36, 9.96, 10.56,
             11.16,
             11.76, 12.36, 12.96, 13.56, 14.16],
            [0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16, 5.76, 6.36, 6.96, 7.56, 8.16, 8.76, 9.36, 9.96, 10.56,
             11.16,
             11.76, 12.36, 12.96, 13.56, 14.16],
            [0.96, 1.56, 2.16, 2.76, 4.56, 5.76, 6.36, 6.96, 7.56, 8.16],
            [0.96, 1.56, 2.16, 2.76, 4.56, 5.76, 6.36, 6.96, 7.56, 8.16],
            [0.96, 1.56, 2.16, 2.76, 4.56, 5.76, 6.36, 6.96, 7.56, 8.16],
            [0.96, 1.56, 2.16, 2.76, 4.56, 5.76, 6.36, 6.96, 7.56, 8.16],
            [0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16, 5.76, 6.36, 6.96, 7.56, 8.16, 8.76, 9.36, 9.96, 10.56,
             11.16,
             11.76, 12.36, 12.96, 13.56, 14.16],
            [0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16, 5.76, 6.36, 6.96, 7.56, 8.16, 8.76, 9.36, 9.96, 10.56,
             11.16,
             11.76, 12.36, 12.96, 13.56, 14.16],
            [0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16, 5.76, 6.36, 6.96, 7.56, 8.16, 8.76, 9.36, 9.96, 10.56,
             11.16,
             11.76, 12.36, 12.96, 13.56, 14.16]]
    else:
        times = set_times(names, keys, timestep, time_start)

    motionProxy.angleInterpolation(names, keys, times, True)
    

def dance_test(motionProxy, timestep=0, time_start=1):
    names = list()
    keys = list()

    names.append("HeadPitch")
    keys.append([-0.221657, 0.474689, -0.221657, 0.474689, -0.221657, 0.474689, -0.221657, 0.474689, 0.00691972])
    names.append("HeadYaw")
    keys.append([-0.0722261, 0.0244576, -0.0722261, 0.0244576, -0.0722261, 0.0244576, -0.0722261, 0.0244576, 0.0059562])
    names.append("LAnklePitch")
    keys.append([-0.35, 0.122173, -0.35, 0.122173, -0.35, 0.122173, -0.35, 0.122173, -0.343118])
    names.append("LAnkleRoll")
    keys.append([-0.00962266, -0.010472, -0.00962266, -0.010472, -0.00962266, -0.010472, -0.00962266, -0.010472, -0.00962266])
    names.append("LElbowRoll")
    keys.append([-1.54214, -0.0526013, -1.54214, -0.0526013, -1.54214, -0.0526013, -1.54214, -0.0526013, -1.00605])
    names.append("LElbowYaw")
    keys.append([-1.20992, -1.21583, -1.20992, -1.21583, -1.20992, -1.21583, -1.20992, -1.21583, -1.38721])
    names.append("LHand")
    keys.append([0.251076, 0.251076, 0.251076, 0.251076, 0.251076, 0.251076, 0.251076, 0.251076, 0.251076])
    names.append("LHipPitch")
    keys.append([-0.451, -0.0994838, -0.451, -0.0994838, -0.451, -0.0994838, -0.451, -0.0994838, -0.44489])
    names.append("LHipRoll")
    keys.append([0.0047717, 0.00523599, 0.0047717, 0.00523599, 0.0047717, 0.00523599, 0.0047717, 0.00523599, 0.0047717])
    names.append("LHipYawPitch")
    keys.append([-0.00415196, -0.127409, -0.00415196, -0.127409, -0.00415196, -0.127409, -0.00415196, -0.127409, -0.00185729])
    names.append("LKneePitch")
    keys.append([0.707488, -0.0418879, 0.707488, -0.0418879, 0.707488, -0.0418879, 0.707488, -0.0418879, 0.699999])
    names.append("LShoulderPitch")
    keys.append([0.998087, 0.998087, 0.998087, 0.998087, 0.998087, 0.998087, 0.998087, 0.998087, 1.39834])
    names.append("LShoulderRoll")
    keys.append([0.145934, 0.145934, 0.145934, 0.145934, 0.145934, 0.145934, 0.145934, 0.145934, 0.295128])
    names.append("LWristYaw")
    keys.append([-0.00489542, -0.00489542, -0.00489542, -0.00489542, -0.00489542, -0.00489542, -0.00489542, -0.00489542, -0.00489542])
    names.append("RAnklePitch")
    keys.append([-0.35, 0.122173, -0.35, 0.122173, -0.35, 0.122173, -0.35, 0.122173, -0.343118])
    names.append("RAnkleRoll")
    keys.append([0, 0, 0, 0, 0, 0, 0, 0, 0])
    names.append("RElbowRoll")
    keys.append([1.54214, 0.0526013, 1.54214, 0.0526013, 1.54214, 0.0526013, 1.54214, 0.0526013, 1.00605])
    names.append("RElbowYaw")
    keys.append([1.20992, 1.20992, 1.20992, 1.20992, 1.20992, 1.20992, 1.20992, 1.20992, 1.38711])
    names.append("RHand")
    keys.append([0.250969, 0.250969, 0.250969, 0.250969, 0.250969, 0.250969, 0.250969, 0.250969, 0.250969])
    names.append("RHipPitch")
    keys.append([-0.45, -0.0994838, -0.45, -0.0994838, -0.45, -0.0994838, -0.45, -0.0994838, -0.44489])
    names.append("RHipRoll")
    keys.append([0.00475827, 0.00475827, 0.00475827, 0.00475827, 0.00475827, 0.00475827, 0.00475827, 0.00475827, 0.00475827])
    names.append("RHipYawPitch")
    keys.append([-0.00415196, -0.127409, -0.00415196, -0.127409, -0.00415196, -0.127409, -0.00415196, -0.127409, -0.00185729])
    names.append("RKneePitch")
    keys.append([0.699999, -0.0418879, 0.699999, -0.0418879, 0.699999, -0.0418879, 0.699999, -0.0418879, 0.699999])
    names.append("RShoulderPitch")
    keys.append([0.998087, 0.998087, 0.998087, 0.998087, 0.998087, 0.998087, 0.998087, 0.998087, 1.39834])
    names.append("RShoulderRoll")
    keys.append([-0.145934, -0.145934, -0.145934, -0.145934, -0.145934, -0.145934, -0.145934, -0.145934, -0.295128])
    names.append("RWristYaw")
    keys.append([0.000500464, 0.000500464, 0.000500464, 0.000500464, 0.000500464, 0.000500464, 0.000500464, 0.000500464, 0.000500464])

    if timestep == 0:
        times = list()
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # HeadPitch
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # HeadYaw
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # LAnklePitch
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # LAnkleRoll
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # LElbowRoll
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # LElbowYaw
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # LHand
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # LHipPitch
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # LHipRoll
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # LHipYawPitch
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # LKneePitch
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # LShoulderPitch
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # LShoulderRoll
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # LWristYaw
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # RAnklePitch
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # RAnkleRoll
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # RElbowRoll
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # RElbowYaw
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # RHand
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # RHipPitch
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # RHipRoll
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # RHipYawPitch
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # RKneePitch
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # RShoulderPitch
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # RShoulderRoll
        times.append([0.84, 1.28, 1.76, 2.16, 2.56, 2.96, 3.36, 3.76, 4.16]) # RWristYaw
    else:
        times = set_times(names, keys, timestep, time_start)

    motionProxy.post.angleInterpolation(names, keys, times, True)